from time import time

from utility.printable import Printable

class Block(Printable):
    """A single block of our blockchain.
    
    Attributes:
        :index: The index of this block.
        :previous_hash: The hash of the previous block in the blockchain.
        :timestamp: The timestamp of the block (automatically generated by default).
        :transactions: A list of transaction which are included in the block.
        :proof: The proof of work number that yielded this block.
    """
    def __init__(self, index, previous_hash, transactions, proof, time=time()):
        self.index = index
        self.previous_hash = previous_hash
        self.timestamp = time
        self.transactions = transactions
        self.proof = proof
    def __repr__(self):
        transactions_str = ""
        for i, t in enumerate(self.transactions):
            transactions_str += f"\t\tt_idx: {i}\n\t\tsender: {t.sender}\n\t\trecipent: {t.recipient}\n\t\tamount: {t.amount}\n\t\tproduct_name: {t.product_name}\n\t\tprice: {t.price}\n\n"
        
        return f"b_index: {self.index}\n\
                 previous hash: {self.previous_hash}\n\
                 self.proof: {self.proof}\n\
                 transactions: \n\n{transactions_str}\n"

